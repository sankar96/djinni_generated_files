// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from dependency_evaluator.djinni

#pragma once

#include "djinni_support.hpp"
#include "my_record.hpp"

namespace djinni_generated {

class NativeMyRecord final {
public:
    using CppType = ::dependency_evaluator::MyRecord;
    using JniType = jobject;

    using Boxed = NativeMyRecord;

    ~NativeMyRecord();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeMyRecord();
    friend ::djinni::JniClass<NativeMyRecord>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/example/sankar_5526/helloworld/MyRecord") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(ILjava/lang/String;Ljava/util/ArrayList;)V") };
    const jfieldID field_mKey1 { ::djinni::jniGetFieldID(clazz.get(), "mKey1", "I") };
    const jfieldID field_mKey2 { ::djinni::jniGetFieldID(clazz.get(), "mKey2", "Ljava/lang/String;") };
    const jfieldID field_mKey3 { ::djinni::jniGetFieldID(clazz.get(), "mKey3", "Ljava/util/ArrayList;") };
};

}  // namespace djinni_generated
